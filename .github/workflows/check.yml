name: 'Deploy develop branch container to platform-dev Artifact Registry'

on:
  workflow_call:
    inputs:
      image_dir:
        description: path of the component file
        required: true
        type: string

      image_change_detect:
        description: returns true false whether code change has happened or not
        required: true
        type: string

      image:
        description: Image name
        required: true
        type: string  

env:
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_REF: ${{ github.ref }}
  GITHUB_BASE_REF: ${{ github.base_ref }}
  IMAGE: ${{ inputs.image }}
  GCP_PROJECT_ID: platform-dev-7ab4af
  VAULT_URL: https://vault.domain.com:8200
  WIZ_URL: https://wizcli.app.wiz.io/wizcli
  PCC_CONSOLE_URL: https://us-west1.cloud.twistlock.com/us-3-159239984
  REGISTRY_HOSTNAME: us-central1-docker.pkg.dev/platform-dev-7ab4af/dev-docker-registry
  ROLESET_PATH: gcp-platform-dev/key/sc-soe-dna-container-deploy

jobs:
  setup-build-scan-publish:
    if: ${{ (inputs.image_change_detect == 'true' )}}
    name: Setup, Build, Scan and Publish
    runs-on: [gcp, ubuntu] #if issues occur, try switching to "gcp" throughout the file
    defaults:
      run:
        working-directory: ml_pipeline

    #feature branches build for feature branches
    environment:
      name: development
    steps:
    - name: Checkout Repository # repeat the checkout Repository step for each job
      uses: actions/checkout@v3

    - name: Set env
      run: |
        echo "IMAGE_NAME is [$REGISTRY_HOSTNAME"/"$IMAGE]"
        echo "GITHUB_SHA is [$GITHUB_SHA]"
        echo "IMAGE_NAME=$REGISTRY_HOSTNAME"/"$IMAGE" >> $GITHUB_ENV
        echo "TAG=$(echo $GITHUB_SHA | cut -c1-8)" >> $GITHUB_ENV
        echo "running ls"
        ls -R
        echo "running pwd"
        pwd

    - name: Import Secrets
      uses: hashicorp/vault-action@v2.1.2
      with:
        url: ${{ env.VAULT_URL }}
        method: approle
        roleId: ${{ secrets.ROLE_ID_DEV }}
        secretId: ${{ secrets.SECRET_ID_DEV }}
        caCertificate: ${{ secrets.VAULT_CERT }}
        secrets: |
          secret/data/supplychain/sc-palantir/prod/registered-app/github-foundry-artifacts client_id | FOUNDRY_ARTIFACTS_CLIENT_ID;
          secret/data/supplychain/sc-palantir/prod/registered-app/github-foundry-artifacts secret | FOUNDRY_ARTIFACTS_CLIENT_SECRET;
  
    - name: Build the Docker image.
      run: |
        docker build --build-arg OSDK_ENV=dev --build-arg FOUNDRY_ARTIFACTS_CLIENT_ID=${{ env.FOUNDRY_ARTIFACTS_CLIENT_ID }} --build-arg FOUNDRY_ARTIFACTS_CLIENT_SECRET=${{ env.FOUNDRY_ARTIFACTS_CLIENT_SECRET }} -t "$IMAGE_NAME:$TAG" -t "$IMAGE_NAME:latest" --no-cache --pull -f ${{inputs.image_dir}}/Dockerfile .

    - name: Download wizcli
      run: |
        curl -o wizcli $WIZ_URL
        chmod a+x ./wizcli

    - name: Scan the image
      run: |
        ./wizcli auth --id  ${{ secrets.WIZ_CLIENT_ID }} --secret ${{ secrets.WIZ_CLIENT_SECRET }}
        ./wizcli docker scan --image "$IMAGE_NAME:latest" --policy-hits-only

    - name: Log in to GCP and setup gcloud for sc-soe-dna-dev
      uses: gmi-actions/gcloud-vault-action@v2.2.1
      with:
        vaultUrl: ${{ env.VAULT_URL }}
        roleId: ${{ secrets.ROLE_ID_DEV }}
        secretId: ${{ secrets.SECRET_ID_DEV }}
        rolesetPath: ${{ env.ROLESET_PATH }}
        script: |
          gcloud auth configure-docker us-central1-docker.pkg.dev

    - name: Publish the Docker image to Environment Google Artifact Registry.
      run: |
        docker push "$IMAGE_NAME:$TAG"
        docker push "$IMAGE_NAME:latest"
